"""
조건문,,,10952,,,A+B - 5

문제
두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.

입력
입력은 여러 개의 테스트 케이스로 이루어져 있다.

각 테스트 케이스는 한 줄로 이루어져 있으며, 각 줄에 A와 B가 주어진다. (0 < A, B < 10)

입력의 마지막에는 0 두 개가 들어온다.

출력
각 테스트 케이스마다 A+B를 출력한다.
"""

# 정답 1
"""
아라비아 숫자의 아스키 값은 그 숫자+48이기 때문에, 입력된 한 자리수 숫자 A B에 대한 총합은 
408 + A + B 이다.
408 = 39(') + 48(숫자 A의 최소값 0) + 32(공백) + 48(숫자 B의 최소값 0) + 92(\) + 110(n) + 39(')
그러므로 408 을 제거하면 A + B 값이 나온다.
408 을 뺀 나머지 또는  계산하거나 
408 의 약수로 나누어 408 을 제거한 후 나머지 값이  
A + B 값이다.
여기서 408 의 약수로 나누어 계산할때 18 보다 큰 수를 사용해야한다.
왜냐하면 각각 한 자리 숫자인 두 수의 합이 최대 18 (9 + 9) 이기때문이다.
18보다 작은 약수로 나눌 경우 408 만 제거되지 않고 A + B 값도 나누어져 기대 결과와 실제 결과가 달라질 수 있다.
ex) A=9, B=9
기대 결과 : 18
실제 결과 : (408 + 9 + 9) % 2 = 0
18보다 큰 약수로 계산할 경우 : (408 + 9 + 9) % 24 = 18
408 의 약수 = [1, 2, 3, 4, 6, 8, 12, 17, 24, 34, 51, 68, 102, 136, 204, 408]
"""
# for v in [*open(0)]:
#     if n := sum(b'%a' % v) - 408:
#         print(n)
#     else:
#         break

# 정답 2
# print("\n".join((li := [str(sum(b'%a' % v) - 408) for v in [*open(0)]])[:li.index('0')]))

# 정답 3
"""
input 으로 읽은 입력값에는 개행문자가 붙지 않는다.
206 = 39(') + 48(숫자 A의 최소값 0) + 32(공백) + 48(숫자 B의 최소값 0) + 39(')
"""
# while n := (sum(b'%a' % input()) - 206): print(n)

# 정답 4
"""
2의 제곱수 256 을 기본값으로 하여 입력된 값을 더하고 
두 수의 최대 합인 18보다 큰 2진수 31 과 논리곱 연산을 하면 두 수의 합이 나온다.
비트 연산자 & (AND, 논리곱) 연산은 두개의 2진수에서 동일한 위치의 bit 가 1인 것들만 1로 계산, 그 외는 0 이다.

2의 제곱수 256 을 기본값으로 정하는 이유는 
바이너리 데이터 합의 기본값이 206 이기 때문이다.
206 = 39(') + 48(숫자 A의 최소값 0) + 32(공백) + 48(숫자 B의 최소값 0) + 39(')
2의 제곱수 비트 배열은 항상 1이 하나만 존재한다.
206 보다 큰 2의 제곱수는 256 이다.
256 의 2진수 값이 0001 0000 0000 이므로 논리곱 연산시 256 은 제거된다.

2진수 31 을 사용하는 이유는 
두 수의 최대 합인 18 이 2의 제곱수 16 보다 크고 32 보다 작기때문이다.
2진수 32 는 0010 0000 이므로 
1 부터 18 까지의 수를 포함하면서 32 보다 작은 2진수는 0001 1111 (31) 이다.  

256 에 두 수의 합을 더한 2진수 0001 0000 0001 ~ 0001 0001 0010 와 
31 의 2진수 0001 1111 를 논리곱 연산하면 
동일한 위치의 bit 가 1인 것들만 1로 계산되므로 
0001 0000 0001 ~ 0001 0001 0010 (257 ~ 274) 범위의 수에서 
0001 0000 0000 (256) 이 제거된 두 수의 합만 구할 수 있다.

ex)
입력 : 1 2
b'2%a' % s : b"2'1 2'"
sum(b'2%a' % s) : 259 = 50(숫자 2) + 39(') + 49(입력 1) + 32(공백) + 50(입력 2) + 39(')
259 2진수 = 0001 0000 0011
31 2진수 = 0000 0001 1111
259 & 31 = 0001 0000 0011 & 0000 0001 1111 = 0000 0000 0011 = 0011 = 3

50(숫자 2) 를 추가로 더하지 않는 경우
b'%a' % s : b"'1 2'"
sum(b'%a' % s) : 209 = 39(') + 49(입력 1) + 32(공백) + 50(입력 2) + 39(')
209 2진수 = 0000 1101 0001
31 2진수 = 0000 0001 1111
209 & 31 = 0000 1101 0001 & 0000 0001 1111 = 0000 0001 0001 = 0001 0001 = 17
"""
# while n := sum(b'2%a' % input()) & 31: print(n)

# 정답 5
for a, _, b, _ in open(0): print(int(a) + int(b) or '')

# 테스트
# print([(sum(b'%a' % v) - 408) for v in [*open(0)] if v != '0 0'])
# print([n if (n := (sum(b'%a' % v) - 408)) > 0 else 0 for v in [*open(0)]])
# print([n for v in [*open(0)] if (n := (sum(b'%a' % v) - 408)) > 0])

# l = [str(sum(b'%a' % v) - 408) for v in [*open(0)]]
# print(l)
# print(l.index('0'))
# print(l[:l.index('0')])
# print(type(l))
# print("\n".join(l[:l.index('0')]))

# for 문에 if else 한줄 코딩
# li = [(end := i) if i else (start := i) for i in range(10)]
# li2 = [i2 if (i2 := i - 408) > 0 else (start := i) for i in range(10)]

# while (n := (sum(b'%a' % input()) - 206)) > 0: print(n)

# s = input()
# print(b'2%a' % s, sum(b'2%a' % s), sep="\n")
